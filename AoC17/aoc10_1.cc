/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class aoc10_1 {
public:
    void solve(istream &in, ostream &out) {
        constexpr int n = 256;
        vector<int> lst(n);
        for (int i = 0; i < n; ++i)
            lst[i] = i;
        vector<int> lens{120,93,0,90,5,80,129,74,1,165,204,255,254,2,50,113};
        int m = lens.size();
        int cur = 0, skip = 0;
        for (int j = 0; j < m; ++j) {
            int len = lens[j];
            for (int i = 0; i < len / 2; ++i) {
                int a = (cur + i) % n;
                int b = (cur + len - 1 - i) % n;
                swap(lst[a], lst[b]);
            }
            cur += len + skip;
            cur %= n;
            ++skip;
        }
        out << lst[0] * lst[1] << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    aoc10_1 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
