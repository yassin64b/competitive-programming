/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TaskB {
private:
    bool isSorted(const string& N) {
        for (int i = 0; i < (int)N.size()-1; ++i) {
            if (N[i] > N[i+1]) {
                return false;
            }
        }
        return true;
    }
public:
    void solve(istream& in, ostream& out) {
        int T;
        in >> T;
        for (int t = 1; t <= T; ++t) {
            string N;
            in >> N;
            while (!isSorted(N)) {
                for (int i = 0; i < (int)N.size()-1; ++i) {
                    if (N[i] > N[i+1]) {
                        --N[i];
                        for (int j = i+1; j < (int)N.size(); ++j) {
                            N[j] = '9';
                        }
                    }
                }
            }
            out << "Case #" << t << ": " << stoll(N) << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    TaskB solver;
    std::istream& in(cin);
    std::ostream& out(cout);
    solver.solve(in, out);
    return 0;
}
