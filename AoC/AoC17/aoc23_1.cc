/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class aoc23_1 {
public:
    void solve(istream& in, ostream& out) {
        vector<tuple<string, string, string>> v;
        string s;
        while (getline(in, s)) {
            stringstream ss(s);
            string com, X;
            ss >> com >> X;
            if (com == "snd" || com == "rcv") {
                v.emplace_back(com, X, ""s);
            } else {
                string Y;
                ss >> Y;
                v.emplace_back(com, X, Y);
            }
        }
        map<string, long long> reg;
        for (char c = 'a'; c <= 'h'; ++c) {
            reg[""s + c] = 0;
        }
        int res = 0;
        for (long long i = 0; i < (long long)v.size(); ++i) {
            string com, X, Y;
            tie(com, X, Y) = v[i];
            if (com == "set") {
                if (reg.find(Y) == reg.end()) {
                    reg[X] = stoll(Y);
                } else {
                    reg[X] = reg[Y];
                }
            } else if (com == "mul") {
                if (reg.find(Y) == reg.end()) {
                    reg[X] *= stoll(Y);
                } else {
                    reg[X] *= reg[Y];
                }
                ++res;
            } else if (com == "sub") {
                if (reg.find(Y) == reg.end()) {
                    reg[X] -= stoll(Y);
                } else {
                    reg[X] -= reg[Y];
                }
            } else if (com == "jnz") {
                long long val;
                if (reg.find(X) == reg.end()) {
                    val = stoll(X);
                } else {
                    val = reg[X];
                }
                if (val != 0) {
                    if (reg.find(Y) == reg.end()) {
                        i += stoll(Y) - 1;
                    } else {
                        i += reg[Y] - 1;
                    }
                }
            }
        }
        out << res << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    aoc23_1 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
