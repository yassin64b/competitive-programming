/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class aoc23_3 {
public:
    void solve(istream& in, ostream& out) {
        int h = 0;
        int from = 57 * 100 + 100'000, to = from + 17'000;
        for (int b = from; b <= to; b += 17) {
            int f = 1;
            for (int d = 2; f && d * d <= b && d < b; ++d) {
                if (b % d == 0)
                    f = 0;
            }
            if (!f)
                ++h;
        }
        out << h << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    aoc23_3 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
