/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class aoc3_1 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        for (int i = 1; i <= n; i += 2) {
            if (i * i >= n) {
                int len = i, cur = i * i, res = i - 1;
                while (cur != n) {
                    for (int j = 0; cur != n && j < len / 2; ++j) {
                        --cur; --res;
                        //cout << cur << " " << res << endl;
                    }
                    for (int j = len / 2 + 1; cur != n && j < len; ++j) {
                        --cur; ++res;
                        //cout << "+ " << cur << " " << res << endl;
                    }
                }
                out << res << "\n";
                break;
                
            }
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    aoc3_1 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
