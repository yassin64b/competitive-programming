/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class aoc9_2 {
private:
    int parse(const string& s, int& i, int n) {
        int res = 0;
        bool garbage = false;
        for ( ; i < n; ++i) {
            if (s[i] == '!') {
                ++i;
            } else if (garbage) {
                if (s[i] == '>')
                    garbage = false;
                else
                    ++res;
            } else {
                if (s[i] == '{')
                    res += parse(s, ++i, n);
                else if (s[i] == '}')
                    return res;
                else if (s[i] == '<')
                    garbage = true;
            }
        }
        assert(false);
        return 0;
    }
public:
    void solve(istream& in, ostream& out) {
        string s;
        in >> s;
        int n = s.size(), i = 0;
        assert(s[i] == '{');
        out << parse(s, ++i, n) << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    aoc9_2 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
