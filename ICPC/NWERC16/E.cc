/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class E101170 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<pair<int, int>> s(n);
        for (int i = 0; i < n; ++i) {
            in >> s[i].first;
            s[i].second = i + 1;
        }
        sort(s.begin(), s.end(), greater<pair<int, int>>());
        int sum = 0;
        for (int i = 1; i < n; ++i) {
            sum += s[i].first;
        }
        if (s[0].first > sum) {
            out << "impossible\n";
        } else {
            for (auto& p : s) {
                out << p.second << " ";
            }
            out << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    E101170 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
