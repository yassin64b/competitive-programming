/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class H101170 {
private:
    long long dist(const string& a, const string& b) {
        return ind(b) - ind(a) - 1;
    }
    
    long long ind(const string& a) {
        if (a.size() == 0) {
            return 0;
        }
        if (a[0] == '0') {
            return ind(a.substr(1));
        } else {
            return (1LL << a.size()) - ind(a.substr(1)) - 1;
        }
    }
public:
    void solve(istream& in, ostream& out) {
        int n;
        string a, b;
        in >> n >> a >> b;
        out << dist(a, b) << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    H101170 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
