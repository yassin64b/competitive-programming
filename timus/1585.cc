/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class timus1585 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        in.ignore(); //for newline char
        
        int cnt[3]{0, 0, 0};
        for (int i = 0; i < n; ++i) {
            string s;
            getline(in, s);
            //out << s << endl;
            
            if (s[0] == 'E') {
                ++cnt[0];
            } else if (s[0] == 'M') {
                ++cnt[1];
            } else {
                ++cnt[2];
            }
        }
        
        if (cnt[0] > cnt[1] && cnt[0] > cnt[2]) {
            out << "Emperor Penguin" << endl;
        } else if (cnt[1] > cnt[0] && cnt[1] > cnt[2]) {
            out << "Macaroni Penguin" << endl;
        } else {
            out << "Little Penguin" << endl;
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    timus1585 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
