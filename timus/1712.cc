/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class timus1712 {
public:
    void solve(istream& in, ostream& out) {
        vector<string> grille(4), cipher(4);
        for (int i = 0; i < 4; ++i) {
            in >> grille[i];
        }
        for (int i = 0; i < 4; ++i) {
            in >> cipher[i];
        }
        string passw;
        for (int k = 0; k < 4; ++k) {
            for (int i = 0; i < 4; ++i) {
                for (int j = 0; j < 4; ++j) {
                    if (grille[i][j] == 'X') {
                        passw += cipher[i][j];
                    }
                }
            }
            vector<string> nxtgr(4, string(4, ' '));
            for (int i = 0; i < 4; ++i) {
                for (int j = 0; j < 4; ++j) {
                    nxtgr[i][j] = grille[4-j-1][i];
                }
            }
            grille = nxtgr;
        }
        out << passw << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    timus1712 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
