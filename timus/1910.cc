/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class timus1910 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        
        vector<int> a(n);
        for (int i = 0; i < n; ++i) {
            in >> a[i];
        }
        
        int cur = a[0] + a[1] + a[2], ind = 1, mx = cur;
        for (int i = 2; i < n - 1; ++i) {
            cur -= a[i - 2];
            cur += a[i + 1];
            if (cur > mx) {
                mx = cur;
                ind = i;
            }
        }
        out << mx << " " << ind+1 << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    timus1910 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
