/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class timus1785 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        
        if (n <= 4) {
            out << "few\n";
        } else if (n <= 9) {
            out << "several\n";
        } else if (n <= 19) {
            out << "pack\n";
        } else if (n <= 49) {
            out << "lots\n";
        } else if (n <= 99) {
            out << "horde\n";
        } else if (n <= 249) {
            out << "throng\n";
        } else if (n <= 499) {
            out << "swarm\n";
        } else if (n <= 999) {
            out << "zounds\n";
        } else {
            out << "legion\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    timus1785 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
