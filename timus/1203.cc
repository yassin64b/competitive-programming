/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class timus1203 {
public:
    void solve(istream& in, ostream& out) {
        int N;
        in >> N;
        
        vector<pair<int,int>> T(N);
        for (int i = 0; i < N; ++i) {
            in >> T[i].second >> T[i].first;
        }
        sort(T.begin(), T.end());
        
        int cur = 0, cnt = 0;
        for (int i = 0; i < N; ++i) {
            if (T[i].second > cur) {
                cur = T[i].first;
                ++cnt;
            }
        }
        out << cnt << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    timus1203 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
