/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class timus2023 {
public:
    void solve(istream& in, ostream& out) {
        int N;
        in >> N;
        
        int res = 0, cur = 0;
        for (int i = 0; i < N; ++i) {
            string name;
            in >> name;
            
            switch (name[0]) {
                case 'A': case 'P': case 'O': case'R':
                    res += abs(0 - cur);
                    cur = 0;
                    break;
                case 'B': case 'M': case 'S':
                    res += abs(1 - cur);
                    cur = 1;
                    break;
                default:
                    res += abs(2 - cur);
                    cur = 2;
                    break;
            }
        }
        out << res << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    timus2023 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
