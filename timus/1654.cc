/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <list>

using namespace std;

class timus1654 {
public:
    void solve(istream& in, ostream& out) {
        list<char> cipher;
        char c;
        while (in >> c) {
            cipher.push_back(c);
        }
        
        for (auto it = cipher.begin(); it != cipher.end(); ) {
            auto nxt = next(it);
            if (nxt != cipher.end() && *it == *nxt) {
                it = cipher.erase(it);
                it = cipher.erase(it);
                if (it != cipher.begin()) {
                    --it;
                }
            } else {
                ++it;
            }
        }
        for (char c : cipher) {
            out << c;
        }
        out << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    timus1654 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
