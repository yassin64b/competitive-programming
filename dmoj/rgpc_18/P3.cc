/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <bits/stdc++.h>

using namespace std;

class dmoj_rgpc18p3 {
public:
    void solve(istream& in, ostream& out) {
        int N, T;
        in >> N >> T;
        vector<int> v(N + 1, 0);
        for (int i = 0; i < T; ++i) {
            int a, b, c;
            in >> a >> b >> c;
            --a;
            --b;
            v[a] += c;
            v[b + 1] -= c;
        }
        for (int i = 1; i <= N; ++i) {
            v[i] += v[i - 1];
        }
        assert(v[N] == 0);
        int L;
        in >> L;
        int cur = 0, res = 0;
        for (int i = 0, j = 0; j < N; ++j) {
            cur += v[j];
            while (cur > L) {
                cur -= v[i];
                ++i;
            }
            assert(i <= j + 1);
            res = max(res, j - i + 1);
        }
        out << res << "\n";
    }
};

int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    dmoj_rgpc18p3 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
