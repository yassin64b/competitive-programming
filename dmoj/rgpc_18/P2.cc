/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <bits/stdc++.h>

using namespace std;

class dmoj_rgpc2 {
public:
    void solve(istream& in, ostream& out) {
        int N;
        double S;
        in >> N >> S;
        int a = 0, bc = 0, d = 0, e = 0, f = 0, cur_f = 0;
        for (int i = 0; i < N; ++i) {
            int t;
            in >> t;
            if (t < 0) {
                t = -t;
            }
            if (t <= 50) {
                ++a;
                ++cur_f;
            } else if (t <= 150) {
                ++bc;
                ++cur_f;
            } else if (t <= 200) {
                ++d;
                ++cur_f;
            } else {
                ++e;
                cur_f = 0;
            }
            f = max(f, cur_f);
        }
        double new_score = 1.5 * a + 1.0 * bc + .5 * d - 1.0 * e + .5 * f;
        out.precision(1);
        out << fixed << max(0., new_score - S) << "\n";
    }
};

int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    dmoj_rgpc2 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
