/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class kickA {
public:
    void solve(istream& in, ostream& out) {
        int T;
        in >> T;
    
        for (int t = 1; t <= T; ++t) {
            int N;
            in >> N;
            in.ignore();
            string mx;
            int val = 0;
            for (int i = 0; i < N; ++i) {
                string tmp;
                getline(in, tmp);
                set<char> s;
                for (int j = 0; j < (int)tmp.size(); ++j) {
                    if (tmp[j] >= 'A' && tmp[j] <= 'Z') {
                        s.insert(tmp[j]);
                    }
                }
                if ((int)s.size() > val || ((int)s.size() == val && tmp < mx)) {
                    val = s.size();
                    mx = tmp;
                }
            }
            out << "Case #" << t << ": " << mx << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    kickA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
