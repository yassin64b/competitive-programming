/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TEMPLELA {
public:
    void solve(istream& in, ostream& out) {
        int S;
        in >> S;
        for (int t = 1; t <= S; ++t) {
            int n;
            in >> n;
            vector<int> h(n);
            for (int i = 0; i < n; ++i) {
                in >> h[i];
            }
            bool valid = (n % 2 == 1);
            for (int i = 0; valid && i < n / 2; ++i) {
                valid = (h[i] == i + 1);
            }
            for (int i = n / 2 + 1; valid && i < n; ++i) {
                valid = (h[i] == n - i);
            }
            if (valid) {
                out << "yes\n";
            } else {
                out << "no\n";
            }
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    TEMPLELA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
