/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class SNAKPROC {
public:
    void solve(istream& in, ostream& out) {
        int R;
        in >> R;
        for (int t = 1; t <= R; ++t) {
            int n;
            string s;
            in >> n >> s;
            bool in_snake = false, valid = true;
            for (int i = 0; i < n; ++i) {
                if (s[i] == 'H') {
                    if (in_snake) {
                        valid = false;
                    } else {
                        in_snake = true;
                    }
                } else if (s[i] == 'T') {
                    if (in_snake) {
                        in_snake = false;
                    } else {
                        valid = false;
                    }
                }
            }
            if (valid && !in_snake) {
                out << "Valid\n";
            } else {
                out << "Invalid\n";
            }
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    SNAKPROC solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
