/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class SIMDISH {
public:
    void solve(istream& in, ostream& out) {
        int T;
        in >> T;
        for (int t = 1; t <= T; ++t) {
            set<string> s;
            for (int i = 0; i < 4; ++i) {
                string tmp;
                in >> tmp;
                s.insert(tmp);
            }
            int cnt = 0;
            for (int i = 0; i < 4; ++i) {
                string tmp;
                in >> tmp;
                if (s.find(tmp) != s.end()) {
                    ++cnt;
                }
            }
            out << (cnt >= 2 ? "similar" : "dissimilar") << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    SIMDISH solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
