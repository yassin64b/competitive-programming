/*
ID: yassin.2
PROG: milk
LANG: C++11
*/

/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin64b
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>

using namespace std;

class milk {
public:
    void solve(istream& in, ostream& out) {
        int N, M;
        in >> N >> M;
        
        vector<pair<int,int>> pa(M);
        for (int i = 0; i < M; ++i) {
            in >> pa[i].first >> pa[i].second;
        }
        sort (pa.begin(), pa.end());
        
        int price = 0, i = 0;
        while (N) {
            if (N > pa[i].second) {
                price += pa[i].first * pa[i].second;
                N -= pa[i].second;
            } else {
                price += N * pa[i].first;
                N = 0;
            }
            ++i;
        }
        out << price << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    milk solver;
    std::ifstream in("milk.in");
    std::ofstream out("milk.out");
    solver.solve(in, out);
    return 0;
}
