/*
ID: yassin.2
PROG: pprime
LANG: C++11
*/
/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class pprime {
private:
    bool isPrime(int x) {
        if (x <= 1 || (x != 2 && x % 2 == 0)) {
            return false;
        }
        for (int i = 3; i*i <= x; i += 2) {
            if (x % i == 0) {
                return false;
            }
        }
        return true;
    }
public:
    void solve(istream& in, ostream& out) {
        int a, b;
        in >> a >> b;
        
        vector<int> res;
        for (const int &x : {5, 7}) {
            if (a <= x && b >= x) {
                res.push_back(x);
            }
        }
        
        for (int i = 1; i <= b; ++i) {
            string s1 = to_string(i), s2 = to_string(i);
            reverse(s2.begin(), s2.end());
            if (stoi(s1 +s2) > b) {
                break;
            }
            if (stoi(s1 + s2) >= a && isPrime(stoi(s1 +s2))) {
                res.push_back(stoi(s1 +s2));
            }
            for (char c = '0'; c <= '9'; ++c) {
                if (stoi(s1 + c + s2) > b) {
                    break;
                }
                if (stoi(s1 + c + s2) >= a && isPrime(stoi(s1 + c + s2))) {
                    res.push_back(stoi(s1 + c + s2));
                }
            }
        }
        
        //sort(res.begin(), res.end());
        for (int &x : res) {
            out << x << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    pprime solver;
    std::ifstream in("pprime.in");
    std::ofstream out("pprime.out");
    solver.solve(in, out);
    return 0;
}
