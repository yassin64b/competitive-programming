/*
ID: yassin.2
PROG: palsquare
LANG: C++11
*/

/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin64b
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>

using namespace std;

class palsquare {
private:
    string toBase(int x, int b) {
        string res;
        while (x) {
            int tmp = x % b;
            x /= b;
            if (tmp <= 9) {
                res += tmp + '0';
            } else {
                res += tmp - 10 + 'A';
            }
        }
        reverse(res.begin(), res.end());
        return res;
    }
    
    bool isPalindrome(string s) {
        size_t n = s.size();
        for (size_t i = 0; i < n / 2; ++i) {
            if (s[i] != s[n - i - 1]) {
                return false;
            }
        }
        return true;
    }
public:
    void solve(istream& in, ostream& out) {
        int B;
        in >> B;
        
        for (int N = 1; N <= 300; ++N) {
            if (isPalindrome(toBase(N * N, B))) {
                out << toBase(N, B) << " " << toBase(N * N, B) << endl;
            }
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    palsquare solver;
    std::ifstream in("palsquare.in");
    std::ofstream out("palsquare.out");
    solver.solve(in, out);
    return 0;
}
