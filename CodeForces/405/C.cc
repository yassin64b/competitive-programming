/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class TaskC {
public:
    void solve(istream& in, ostream& out) {
        int n, k;
        in >> n >> k;
        
        vector<string> names;
        string x = "A";
        for (int i = 0; i < 26; ++i) {
            names.push_back(x);
            ++x[0];
        }
        x[0] = 'A';
        x += "a";
        for (int i = 0; i < 26; ++i) {
            names.push_back(x);
            ++x[0];
        }
        
        for (int i = 0; i < n-k+1; ++i) {
            string s;
            in >> s;
            if (s == "YES") {
                continue;
            } else {
                names[k+i-1] = names[i];
            }
        }
        
        for (int i = 0; i < n; ++i) {
            out << names[i] << " ";
        }
        out << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskC solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
