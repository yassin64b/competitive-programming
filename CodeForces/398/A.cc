/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;

        int next = n;
        priority_queue<int> pq;
        for (int i = 0; i < n; ++i) {
            int x;
            in >> x;
        
            if (x == next) {
                --next;
                out << x;
                while (pq.size() > 0 && pq.top() == next) {
                    pq.pop();
                    out << " " << next--;
                }
            } else {
                pq.push(x);
            }
            out << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
