/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin64b
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        
        int north = 0;
        for (int i = 0; i < n; ++i) {
            int t;
            string dir;
            in >> t >> dir;
            
            if (north == 0) {
                if (dir != "South") {
                    out << "NO" << endl;
                    return;
                }
            } else if (north == 20000) {
                if (dir != "North") {
                    out << "NO" << endl;
                    return;
                }
            }
            
            if (dir == "North") {
                north -= t;
                if (north < 0) {
                    out << "NO" << endl;
                    return;
                }
            } else if (dir == "South") {
                north += t;
                if (north > 20000) {
                    out << "NO" << endl;
                    return;
                }
            }
        }
        
        if (north == 0) {
            out << "YES" << endl;
        } else {
            out << "NO" << endl;
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
