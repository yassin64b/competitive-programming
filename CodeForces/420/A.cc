/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<vector<int>> a(n, vector<int>(n));
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                in >> a[i][j];
            }
        }
        bool good = true;
        for (int x = 0; good && x < n; ++x) {
            for (int y = 0; good && y < n; ++y) {
                good = (a[x][y] == 1);
                for (int i = 0; !good && i < n; ++i) {
                    for (int j = 0; !good && j < n; ++j) {
                        if (a[x][j] + a[i][y] == a[x][y]) {
                            good = true;
                        }
                    }
                }
                
            }
        }
        out << (good ? "Yes\n" : "No\n");
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
