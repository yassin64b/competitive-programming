/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        string s;
        in >> s;
        int n = s.size();
        
        int cnt = 0;
        for (int i = 0; i+1 < n; ++i) {
            if (s[i] == 'V' && s[i+1] == 'K') {
                ++cnt;
            }
        }
        
        for (int j = 0; j < n; ++j) {
            if (s[j] == 'V') {
                s[j] = 'K';
            } else {
                s[j] = 'V';
            }
            int tmp = 0;
            for (int i = 0; i+1 < n; ++i) {
                if (s[i] == 'V' && s[i+1] == 'K') {
                    ++tmp;
                }
            }
            cnt = max(cnt, tmp);
            if (s[j] == 'V') {
                s[j] = 'K';
            } else {
                s[j] = 'V';
            }
        }
        
        out << cnt << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
