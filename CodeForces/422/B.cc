/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        int n, m;
        in >> n >> m;
        string s, t;
        in >> s >> t;
        int mn = n + 1, ind = -1;
        for (int i = 0; i + n <= m; ++i) {
            int cur = 0;
            for (int j = i; j < i + n; ++j) {
                cur += s[j - i] != t[j];
            }
            if (cur < mn) {
                mn = cur;
                ind = i;
            }
        }
        assert(ind >= 0);
        out << mn << "\n";
        for (int j = ind; j < ind + n; ++j) {
            if (s[j - ind] != t[j])
                out << j - ind + 1 << " ";
        }
        out << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
