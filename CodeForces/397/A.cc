/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        int n;
        string home;
        in >> n >> home;
        
        int tohome = 0, fromhome = 0;
        for (int i = 0; i < n; ++i) {
            string flight;
            in >> flight;
            
            if (flight.substr(0, 3) == home) {
                ++fromhome;
            } else {
                ++tohome;
            }
        }
        
        if (tohome == fromhome) {
            out << "home\n";
        } else {
            //assert(tohome+1 == fromhome);
            out << "contest\n";
        }
        
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
