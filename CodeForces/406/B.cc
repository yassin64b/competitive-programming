/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        int n, m;
        in >> n >> m;
        for (int i = 0; i < m; ++i) {
            int k;
            in >> k;
            bool flag = false;
            vector<pair<bool,bool>> v(n+1, {false, false});
            for (int j = 0; j < k; ++j) {
                int x;
                in >> x;
                if (x < 0) {
                    v[-x].second = true;
                    if (v[-x].first) {
                        flag = true;
                    }
                } else {
                    v[x].first = true;
                    if (v[x].second) {
                        flag = true;
                    }
                }
            }
            if (!flag) {
                out << "YES\n";
                return;
            }
        }
        out << "NO\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
