/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        string s;
        in >> s;
        
        int ir = 0, ib = 0, iy = 0, ig = 0;
        int n = s.size();
        for (int i = 0; i < n; ++i) {
            if (s[i] == 'R') {
                ir = i % 4;
            } else if (s[i] == 'B') {
                ib = i % 4;
            } else if (s[i] == 'Y') {
                iy = i % 4;
            } else if (s[i] == 'G') {
                ig = i % 4;
            }
        }
        
        int kr = 0, kb = 0, ky = 0, kg = 0;
        for (int i = 0; i < n; ++i) {
            if (s[i] == '!') {
                if (i % 4 == ir) {
                    ++kr;
                } else if (i % 4 == ib) {
                    ++kb;
                } else if (i % 4 == iy) {
                    ++ky;
                } else if (i % 4 == ig) {
                    ++kg;
                }
            }
        }
        
        out << kr << " " << kb << " " << ky << " " << kg << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
