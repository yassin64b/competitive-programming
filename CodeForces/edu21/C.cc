/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TaskC {
public:
    void solve(istream& in, ostream& out) {
        int n, w;
        in >> n >> w;
        vector<pair<int, int>> a(n);
        for (int i = 0; i < n; ++i) {
            in >> a[i].first;
            a[i].second = i;
        }
        sort(a.begin(), a.end());
        vector<int> v(n);
        for (int i = 0; i < n; ++i) {
            v[i] = a[i].first / 2 + a[i].first % 2;
        }
        
        int mn = 0, val = 0;
        for (int i = 0; i < n; ++i) {
            if (v[i] < mn && val < a[i].first) {
                v[i] = mn;
            }
            mn = v[i];
            val = a[i].first;
        }
        
        int sum = accumulate(v.begin(), v.end(), 0);
        if (sum < w) {
            for (int i = n-1, diff = w - sum; diff >= 0 && i >= 0; --i) {
                val = min(a[i].first, v[i] + diff);
                diff -= val - v[i];
                v[i] = val;
            }
        }
        sum = accumulate(v.begin(), v.end(), 0);
        if (sum != w) {
            out << -1 << "\n";
        } else {
            for (int i = 0; i < n; ++i) {
                for (int j = 0; j < n; ++j) {
                    if (a[j].second == i) {
                        out << v[j] << " ";
                    }
                }
            }
            out << "\n";
        }
        
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    TaskC solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
