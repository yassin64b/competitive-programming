/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        string s;
        in >> s;
        
        map<char,int> cnt;
        cnt['B'] = cnt['b'] = cnt['u'] = cnt['l'] = cnt['a'] = cnt['s'] = cnt['r'] = 0;
        for (size_t i = 0; i < s.size(); ++i) {
            cnt[s[i]]++;
        }
        
        string aim = "Bulbasaur";
        int mn = 1e7;
        for (auto &p : cnt) {
            if (aim.find(p.first) != string::npos) {
                if (p.first == 'a' || p.first == 'u') {
                    mn = min(mn, p.second / 2);
                } else {
                    mn = min(mn, p.second);
                }
            }
        }
        out << (mn == (int)1e7 ? 0 : mn) << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
