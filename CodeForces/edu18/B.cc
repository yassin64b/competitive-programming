/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        int n, k;
        in >> n >> k;
        vector<int> a(k);
        for (int i = 0; i < k; ++i) {
            in >> a[i];
        }
        vector<int> v(n);
        for (int i = 0; i < n; ++i) {
            v[i] = i;
        }
        int leader = 0;
        for (int i = 0; i < k; ++i) {
            int elim = (leader + a[i]) % v.size();
            int val = v[elim];
            v.erase(v.begin()+elim);
            if (elim == (int)v.size()) {
                leader = 0;
            } else {
                leader = elim;
            }
            out << val+1 << (i == k-1 ? "\n" : " ");
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
