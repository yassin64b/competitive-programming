/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        int n, w;
        in >> n >> w;
        vector<int> a(2*n);
        
        for (int i = 0; i < 2*n; ++i) {
            in >> a[i];
        }
        
        sort(a.begin(), a.end());
        double mx_cup = 1e9;
        for (int i = 0; i < n; ++i) {
            mx_cup = min(mx_cup, (double)a[i]);
        }
        for (int i = n; i < 2*n; ++i) {
            mx_cup = min(mx_cup, a[i]/2.);
        }
        
        double mx_pot = w / 3. / n;
        double mx = min(mx_pot, mx_cup);
        
        out.precision(17);
        out << fixed << mx * 3 * n << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
