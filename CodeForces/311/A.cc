/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        int mn[3], mx[3];
        for (int i = 0; i < 3; ++i) {
            in >> mn[i] >> mx[i];
        }
        
        int d1 = 0, d2 = 0, d3 = 0;
        while (n-1 >= mn[1] + mn[2] && mx[0]) {
            ++d1;
            --mx[0];
            --n;
        }
        while (n-1 >= mn[2] && mx[1]) {
            ++d2;
            --mx[1];
            --n;
        }
        d3 = n;
        
        out << d1 << " " << d2 << " " << d3 << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
