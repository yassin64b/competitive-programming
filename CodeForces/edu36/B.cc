/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        int n, pos, l, r;
        in >> n >> pos >> l >> r;
        int a = r - pos, b = pos - l;
        if (pos > r || pos < l) {
            if (l == 1) {
                out << pos - r + 1 << "\n";
            } else if (r == n) {
                out << l - pos + 1 << "\n";
            } else {
                if (pos > r) {
                    out << pos - l + 2 << "\n";
                } else {
                    out << r - pos + 2 << "\n";
                }
            }
        } else if (l == 1 && r == n) {
            out << 0 << "\n";
        } else if (l == 1) {
            out << a + 1 << "\n";
        } else if (r == n) {
            out << b + 1 << "\n";
        } else {
            out << min(2 * a + b, a + 2 * b) + 2 << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
