/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class TaskC {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<int> a(n);
        for (int i = 0; i < n; ++i) {
            in >> a[i];
            --a[i];
        }
        string s;
        in >> s;
        vector<int> can_swap_downto(n);
        can_swap_downto[0] = 0;
        for (int i = 1; i < n; ++i) {
            if (s[i - 1] == '1') {
                can_swap_downto[i] = can_swap_downto[i - 1];
            } else {
                can_swap_downto[i] = i;
            }
        }
        vector<int> can_swap_upto(n);
        can_swap_upto[n - 1] = n - 1;
        for (int i = n - 2; i >= 0; --i) {
            if (s[i] == '1') {
                can_swap_upto[i] = can_swap_upto[i + 1];
            } else {
                can_swap_upto[i] = i;
            }
        }
        
        for (int i = 0; i < n; ++i) {
            if (a[i] < i) {
                if (can_swap_downto[i] > a[i]) {
                    out << "NO\n";
                    return;
                }
            } else if (a[i] > i) {
                if (can_swap_upto[i] < a[i]) {
                    out << "NO\n";
                    return;
                }
            }
        }
        out << "YES\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    TaskC solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
