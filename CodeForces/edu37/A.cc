/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        int t;
        in >> t;
        for (int q = 0; q < t; ++q) {
            int n, k;
            in >> n >> k;
            vector<int> x(k);
            for (int i = 0; i < k; ++i) {
                in >> x[i];
            }
            int res = x[0];
            res = max(res, n - x[k - 1] + 1);
            for (int i = 0; i + 1 < k; ++i) {
                res = max(res, (x[i + 1] - x[i] + 1 + 1) / 2);
            }
            out << res << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
