/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin64b
 */

#include <fstream>

#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <map>

using namespace std;

class TaskC {
public:
    void solve(std::istream& in, std::ostream& out) {
        int n;
        in >> n;

        string s;
        in >> s;

        int rcnt = 0, dcnt = 0;
        for (int i = 0; i < (int)s.size(); ++i) {
            if (s[i] == 'D') {
                ++dcnt;
            } else {
                ++rcnt;
            }
        }

        int delrcnt = 0, deldcnt = 0;
        while (rcnt > 0 && dcnt > 0) {

            for (int i = 0; i < (int) s.size(); ++i) {
                if (s[i] == 'D') {
                    if (deldcnt > 0) {
                        --deldcnt;
                        --dcnt;
                        s[i] = 1;
                    } else {
                        ++delrcnt;
                    }
                } else if (s[i] == 'R') {
                    if (delrcnt > 0) {
                        --delrcnt;
                        --rcnt;
                        s[i] = 1;
                    } else {
                        ++deldcnt;
                    }
                }
                //cout << rcnt << " " << dcnt << "-" << delrcnt << " " << deldcnt << endl;
            }
        }
        out << (dcnt > rcnt ? "D" : "R") << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskC solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}