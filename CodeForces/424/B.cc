/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        string s1, s2, s;
        in >> s1 >> s2 >> s;
        for (int i = 0; i < (int)s.size(); ++i) {
            if (isalpha(s[i])) {
                char c = tolower(s[i]);
                c = s2[s1.find(c)];
                if (isupper(s[i])) {
                    s[i] = toupper(c);
                } else {
                    s[i] = c;
                }
            }
            
        }
        out << s << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
