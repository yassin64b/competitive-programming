/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        int n, k;
        in >> n >> k;
    
        vector<int> res;
        for (int i = 2; i <= n; ++i) {
            if (n % i == 0) {
                while (n % i == 0) {
                    n /= i;
                    if ((int)res.size() < k) {
                        res.push_back(i);
                    } else {
                        res.back() *= i;
                    }
                }
            }
        }
    
        if ((int)res.size() < k) {
            out << -1 << "\n";
            return;
        }
    
        for (int i = 0; i < (int)res.size(); ++i) {
            out << res[i] << " ";
        }
        out << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
