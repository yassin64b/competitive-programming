/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <bits/stdc++.h>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<int> w(2 * n);
        for (int i = 0; i < 2 * n; ++i) {
            in >> w[i];
        }
        sort(w.begin(), w.end());
        int best = 50'000;
        for (int a = 0; a < 2 * n; ++a) {
            for (int b = a + 1; b < 2 * n; ++b) {
                vector<int> cur_w;
                for (int i = 0; i < 2 * n; ++i) {
                    if (i != a && i != b) {
                        cur_w.push_back(w[i]);
                    }
                }
                assert((int)cur_w.size() == 2 * (n - 1));
                int cur = 0;
                for (int i = 0; i + 1 < 2 * (n - 1); i += 2) {
                    cur += abs(cur_w[i + 1] - cur_w[i]);
                }
                best = min(best, cur);
            }
        }
        out << best << "\n";
    }
};

int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
