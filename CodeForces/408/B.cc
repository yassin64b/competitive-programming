/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        int n, m, k;
        in >> n >> m >> k;
        vector<int> holes(m);
        vector<int> is_hole(n+1, 0);
        for (int i = 0; i < m; ++i) {
            in >> holes[i];
            is_hole[holes[i]] = 1;
        }
        int x = 1;
        if (is_hole[x]) {
            out << x << "\n";
            return;
        }
        for (int i = 0; i < k; ++i) {
            int u, v;
            in >> u >> v;
            if (x == u) {
                x = v;
            } else if (x == v) {
                x = u;
            }
            //cout << u << " " << v << endl;
            if (is_hole[x]) {
                out << x << "\n";
                return;
            }
        }
        out << x << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
