/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin64b
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        int r, c;
        in >> r >> c;
        
        char cake[10][10];
        int free_col[10] = {0}, free_row[10] = {0};
        for (int i = 0; i < r; ++i) {
            for (int j = 0; j < c; ++j) {
                in >> cake[i][j];
                if (cake[i][j] == 'S') {
                    free_row[i] = 1;
                    free_col[j] = 1;
                }
            }
        }

        int cnt = 0;
        for (int i = 0; i < r; ++i) {
            for (int j = 0; j < c; ++j) {
                if (cake[i][j] != 'S' && (free_col[j] == 0 || free_row[i] == 0)) {
                    ++cnt;
                }
            }
        }
        out << cnt << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
