/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin64b
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <cassert>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        int n, m;
        in >> n >> m;
        
        set<int> poss;
        for (int i = 1; i <= n; ++i) {
            poss.insert(i);
        }
        
        for (int i = 0; i < m; ++i) {
            int a, b;
            in >> a >> b;
            poss.erase(a);
            poss.erase(b);
        }
        
        assert(poss.size() > 0);
        
        int mid = *poss.begin();
        
        out << n-1 << endl;
        for (int i = 1; i <= n; ++i) {
            if (i == mid) continue;
            out << mid << " " << i << endl;
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
