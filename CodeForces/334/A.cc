/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        int m[5], w[5];
        for (int i = 0; i < 5; ++i) {
            in >> m[i];
        }
        for (int i = 0; i < 5; ++i) {
            in >> w[i];
        }
        int hs, hu;
        in >> hs >> hu;
        
        double score = 0;
        for (int i = 0; i < 5; ++i) {
            int val = 500 * (i + 1);
            score += max(0.3 * val, (1 - m[i] / 250.) * val - 50 * w[i]);
        }
        score += 100 * hs;
        score -= 50 * hu;
        out << round(score) << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
