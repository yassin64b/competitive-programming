/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        int n, t, k, d;
        in >> n >> t >> k >> d;
        
        int res1 = (n + k - 1) / k * t;
        int res2 = 0;
        for (int sum = 0; sum < n; ++res2) {
            if (res2 % t == t-1) {
                //cout << "1. at " << res2 << endl;
                sum += k;
            }
            if (res2 >= d && (res2 - d) % t == t-1) {
                //cout << "2. at " << res2 << endl;
                sum += k;
            }
        }
        //cout << res1 << " " << res2 << endl;
        if (res1 <= res2) {
            out << "NO\n";
        } else {
            out << "YES\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
