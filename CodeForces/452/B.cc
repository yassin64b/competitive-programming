/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<int> a(n);
        for (int i = 0; i < n; ++i)
            in >> a[i];
        vector<int> mnths{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        vector<int> b;
        for (int i = 0; i < 3; ++i)
            for (int m : mnths)
                b.push_back(m);
        for (int m : mnths)
            b.push_back((m == 28 ? 29 : m));
        for (int i = 0; i < 3; ++i)
            for (int m : mnths)
                b.push_back(m);
        
        for (int i = 0; i + n <= (int)b.size(); ++i) {
            bool ok = true;
            for (int j = 0; j < n; ++j) {
                if (a[j] != b[i + j])
                    ok = false;
            }
            if (ok) {
                out << "YES\n";
                return;
            }
        }
        out << "NO\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
