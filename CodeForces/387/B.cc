/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin64b
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>

using namespace std;


class TaskB {
private:
    char a[5] = {'A', 'C', 'G', 'T', '?'};

public:

    void solve(istream& in, ostream& out) {
        int n;
        string s;
        in >> n >> s;

        if (n % 4 != 0) {
            out << "===" << endl;
            return;
        }

        int cnt[5] = {0};
        for (char &c : s) {
            for (int i = 0; i < 5; ++i) {
                if (c == a[i]) {
                    ++cnt[i];
                    break;
                }
            }
        }

        int w = n/4;
        int j = 0;
        for (int i = 0; i < 4; ++i) {
            if (cnt[i] > w) {
                out << "===" << endl;
                return;
            }
            while (cnt[i] < w) {
                while (j < n && s[j] != a[4]) {
                    ++j;
                }

                s[j] = a[i];
                ++cnt[i];
            }
        }
        out << s << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
