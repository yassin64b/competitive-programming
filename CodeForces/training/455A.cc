/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class A455 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<int> a(n);
        for (int i = 0; i < n; ++i) {
            in >> a[i];
        }
        
        sort(a.begin(), a.end());
        vector<pair<int,long long>> b;
        for (int i = 0; i < n; ++i) {
            int j = i+1;
            while (j < n && a[j] == a[i]) {
                ++j;
            };
            int len = j-i;
            b.push_back(make_pair(a[i], (long long)a[i]*len));

            i = j-1;
        }
        /*for (int i = 0; i < (int)b.size(); ++i) {
            out << b[i].first << " " << b[i].second << endl;
        }*/
        
        vector<long long> dp(b.size());
        dp[0] = b[0].second;
        for (int i = 1; i < (int)b.size(); ++i) {
            if (b[i-1].first != b[i].first-1) {
                dp[i] = dp[i-1] + b[i].second;
            } else {
                dp[i] = max(dp[i-1], (i-2 >= 0 ? dp[i-2] : 0) + b[i].second);
            }
        }
        out << dp[b.size()-1] << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    A455 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
