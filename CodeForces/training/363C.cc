/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<pair<int,int>> vii;

class C363 {
public:
    void solve(istream& in, ostream& out) {
        string s, res;
        in >> s;
        
        for (int i = 0; i < (int)s.size(); ++i) {
            int n = res.size();
            if (n >= 2) {
                if (res[n-1] == s[i] && res[n-2] == s[i]) {
                    continue;
                }
            }
            if (n >= 3) {
                if (res[n-3] == res[n-2] && res[n-1] == s[i]) {
                    continue;
                }
            }
            res += s[i];
        }
        
        out << res << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    C363 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
