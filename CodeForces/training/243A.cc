/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

constexpr int MAXV = (1 << 21);

class A243 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<int> a(n);
        for (int i = 0; i < n; ++i) {
            in >> a[i];
        }
        
        vector<int> seen(MAXV, 0);
        set<int> cur;
        for (int i = 0; i < n; ++i) {
            set<int> nxt;
            nxt.insert(a[i]);
            for (auto it = cur.begin(); it != cur.end(); ++it) {
                nxt.insert(*it | a[i]);
            }
            cur = nxt;
            for (auto it = cur.begin(); it != cur.end(); ++it) {
                seen[*it] = 1;
            }
        }
        
        int res = accumulate(seen.begin(), seen.end(), 0);
        out << res << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    A243 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
