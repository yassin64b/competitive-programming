/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class A550 {
public:
    void solve(istream& in, ostream& out) {
        string s;
        in >> s;
        int n = s.size();
        
        vector<int> hasAB1(n, 0), hasAB2(n, 0), hasBA1(n, 0), hasBA2(n, 0);
        for (int i = 0; i < n-1; ++i) {
            if (s[i] == 'A' && s[i+1] == 'B') {
                hasAB1[i+1] = 1;
            }
            if (hasAB1[i]) {
                hasAB1[i+1] = 1;
            }
            if (s[i] == 'B' && s[i+1] == 'A') {
                hasBA1[i+1] = 1;
            }
            if (hasBA1[i]) {
                hasBA1[i+1] = 1;
            }
        }
        for (int i = n-1; i > 0; --i) {
            if (s[i] == 'A' && s[i-1] == 'B') {
                hasBA2[i-1] = 1;
            }
            if (hasBA2[i]) {
                hasBA2[i-1] = 1;
            }
            if (s[i] == 'B' && s[i-1] == 'A') {
                hasAB2[i-1] = 1;
            }
            if (hasAB2[i]) {
                hasAB2[i-1] = 1;
            }
        }
        for (int i = 0; i < n-1; ++i) {
            if ((hasAB1[i] && hasBA2[i+1]) || (hasBA1[i] && hasAB2[i+1])) {
                out << "YES\n";
                return;
            }
        }
        out << "NO\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    A550 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
