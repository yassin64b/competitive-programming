/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class C479 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<int> a(n), b(n);
        vector<pair<int,int>> ab(n);
        for (int i = 0; i < n; ++i) {
            in >> a[i] >> b[i];
            ab[i] = make_pair(a[i], b[i]);
        }
        
        sort(ab.begin(), ab.end());
        int cur = -1;
        for (int i = 0; i < n; ++i) {
            if (ab[i].second >= cur) {
                cur = ab[i].second;
            } else {
                cur = ab[i].first;
            }
        }
        out << cur << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    C479 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
