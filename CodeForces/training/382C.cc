/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class C382 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<int> a(n);
        for (int i = 0; i < n; ++i) {
            in >> a[i];
        }
        sort(a.begin(), a.end());
        
        if (n == 1) {
            out << -1 << "\n";
            return;
        }
        
        
        set<int> res;
        for (int j = 1; j <= 2 && j < n; ++j) {
            int diff = a[j] - a[j - 1], violations = 0;
            for (int i = 0; i + 1 < n; ++i) {
                if (a[i + 1] - a[i] != diff) {
                    ++violations;
                }
            }
    
            if (violations > 1) {
        
            } else if (violations == 1) {
                for (int i = 0; i + 1 < n; ++i) {
                    if (a[i + 1] - a[i] != diff) {
                        if (a[i + 1] - a[i] == 2 * diff) {
                            res.insert(a[i] + diff);
                        }
                    }
                }
            } else {
                res.insert(a[0] - diff);
                if (n == 2 && diff % 2 == 0) {
                    res.insert(a[0] + diff / 2);
                }
                res.insert(a[n-1] + diff);
            }
        }
        
        
        out << res.size() << "\n";
        for (int x : res) {
            out << x << " ";
        }
        out << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    C382 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
