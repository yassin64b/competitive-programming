/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class A363 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<string> res;
        do {
            int dig = n % 10;
            n /= 10;
            res.push_back("--|-----");
            if (dig >= 5) res.back()[1] = 'O', dig -= 5;
            else res.back()[0] = 'O';
            for (int i = 0; i < dig; ++i)
                res.back()[3 + i] = 'O';
            for (int i = 0; i < 4 - dig; ++i)
                res.back()[7 - i] = 'O';
        } while (n);
        //reverse(res.begin(), res.end());
        for (const string& s : res)
            out << s << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    A363 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
