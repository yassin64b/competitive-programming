/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class B362 {
public:
    void solve(istream& in, ostream& out) {
        int n, m;
        in >> n >> m;
        vector<int> d(m);
        for (int i = 0; i < m; ++i)
            in >> d[i];
        sort(d.begin(), d.end());
        if (m == 0) {
            out << "YES\n";
            return;
        }
        if (d[0] == 1 || d.back() == n) {
            out << "NO\n";
            return;
        }
        for (int i = 0; i + 2 < m; ++i) {
            if (d[i] + 1 == d[i + 1] && d[i + 1] + 1 == d[i + 2]) {
                out << "NO\n";
                return;
            }
        }
        out << "YES\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    B362 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
