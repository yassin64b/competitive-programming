/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class C313 {
    
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        
        vector<int> v(n);
        for (int i = 0; i < n; ++i) {
            in >> v[i];
        }
        sort(v.begin(), v.end(), greater<int>());
        
        long long res = 0;
        int i = 1;
        while (i <= n) {
            for (int j = 0; j < i; ++j) {
                res += v[j]; //could also precalc, but sorting dominant
            }
            i *= 4;
        }
        
        out << res << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    C313 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
