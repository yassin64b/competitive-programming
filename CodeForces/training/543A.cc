/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class A543 {
public:
    void solve(istream &in, ostream &out) {
        int n, m, b, mod;
        in >> n >> m >> b >> mod;
        vector<int> a(n);
        for (int i = 0; i < n; ++i) {
            in >> a[i];
        }
        
        vector<vector<int>> dp(m + 1, vector<int>(b + 1, 0));
        dp[0][0] = 1;
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j <= m; ++j) {
                for (int k = 0; k <= b; ++k) {
                    if (j + 1 <= m && k + a[i] <= b) {
                        dp[j + 1][k + a[i]] += dp[j][k];
                        dp[j + 1][k + a[i]] %= mod;
                    }
                    //cout << dp[j][k] << " ";
                }
                //cout << endl;
            }
            //cout << endl;
        }
        int res = 0;
        for (int k = 0; k <= b; ++k) {
            res += dp[m][k];
            res %= mod;
        }
        out << res << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    A543 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
