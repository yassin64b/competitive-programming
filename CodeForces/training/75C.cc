/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class C75 {
public:
    void solve(istream& in, ostream& out) {
        int a, b, n;
        in >> a >> b >> n;
        vector<int> divs;
        for (int i = 1; i*i <= max(a, b); ++i) {
            if (a % i == 0 && b % i == 0) {
                divs.push_back(i);
            }
            if (a % (a/i) == 0 && b % (a/i) == 0) {
                divs.push_back(a/i);
            }
            if (b % (b/i) == 0 && a % (b/i) == 0) {
                divs.push_back(b/i);
            }
        }
        sort(divs.begin(), divs.end());
        
        for (int i = 0; i < n; ++i) {
            int low, high;
            in >> low >> high;
            auto it = upper_bound(divs.begin(), divs.end(), high);
            if (it != divs.begin() && *--it >= low) {
                out << *it << "\n";
            } else {
                out << "-1\n";
            }
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    C75 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
