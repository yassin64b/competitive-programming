/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class C507 {
public:
    void solve(istream& in, ostream& out) {
        int h;
        long long n;
        in >> h >> n;
        --n;
        long long res = 0;
        long long num_leafs = (1LL << h);
        for (int i = 0, t = 0; i < h; ++i) {
            if (t == 0) { //go to L
                if (n >= num_leafs / 2) { //is in R
                    res += num_leafs;
                    n -= num_leafs / 2;
                    t = 0;
                } else { //is in L
                    t = 1;
                    ++res;
                }
            } else { //go to R
                if (n >= num_leafs / 2) { //is in R
                    t = 0;
                    n -= num_leafs / 2;
                    ++res;
                } else { //is in L
                    res += num_leafs;
                    t = 1;
                }
            }
            num_leafs /= 2;
        }
        
        out << res << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    C507 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
