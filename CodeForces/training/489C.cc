/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<pair<int,int>> vii;

class C489 {
public:
    void solve(istream& in, ostream& out) {
        int m, s;
        in >> m >> s;
        
        if (s == 0 && m != 1) {
            out << -1 << " " << -1 << endl;
            return;
        }
        
        string smallest(m, '0'), largest(m, '0');
        smallest[0] = (s > 0 ? '1' : '0');
        int ss = s - 1;
        for (int i = m-1; i >= 1; --i) {
            int cur = min(9, ss);
            ss -= cur;
            smallest[i] = cur + '0';
        }
        
        if (ss > 8) {
            smallest = "-1";
        } else if (ss > 0) {
            smallest[0] = ss + 1 + '0';
        }
        
        
        for (int i = 0; i < m; ++i) {
            int cur = min(9, s);
            s -= cur;
            largest[i] = cur + '0';
        }
        if (s > 0) {
            largest = "-1";
        }
        
        out << smallest << " " << largest << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    C489 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
