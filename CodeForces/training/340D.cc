/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class D340 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<int> a(n), mn(n);
        for (int i = 0; i < n; ++i) {
            in >> a[i];
        }
        vector<int> lis;
        lis.push_back(a[0]);
        for (int i = 1; i < n; ++i) {
            if (a[i] > lis.back()) {
                lis.push_back(a[i]);
            } else {
                auto it = upper_bound(lis.begin(), lis.end(), a[i]);
                *it = a[i];
            }
        }
        
        
        out << lis.size() << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    D340 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
