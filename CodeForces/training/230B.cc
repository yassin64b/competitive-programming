/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class B230 {
private:
    bool isPrime(int x) {
        if (x < 2) return false;
        if (x == 2) return true;
        if (x % 2 == 0) return false;
        for (int i = 3; i*i <= x; i += 2) {
            if (x % i == 0) return false;
        }
        return true;
    }
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<long long> x(n);
        for (int i = 0; i < n; ++i) {
            in >> x[i];
        }
        
        for (int i = 0; i < n; ++i) {
            long long tmp = sqrt(x[i]);
            if (tmp*tmp == x[i] && isPrime(tmp)) {
                out << "YES\n";
            } else {
                out << "NO\n";
            }
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    B230 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
