/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class A358 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<int> x(n);
        for (int i = 0; i < n; ++i) {
            in >> x[i];
        }
        for (int j = 1; j < n; ++j) {
            for (int i = 0; i < j; ++i) {
                if (x[i] > min(x[j-1], x[j]) && x[i] < max(x[j-1], x[j])) {
                    if (x[i+1] > max(x[j-1], x[j]) || x[i+1] < min(x[j-1], x[j])) {
                        //cout << j << "-" << i << endl;
                        out << "yes\n";
                        return;
                    }
                } else if (x[i+1] > min(x[j-1], x[j]) && x[i+1] < max(x[j-1], x[j])) {
                    if (x[i] > max(x[j-1], x[j]) || x[i] < min(x[j-1], x[j])) {
                        //cout << j << " " << i << endl;
                        out << "yes\n";
                        return;
                    }
                }
            }
        }
        out << "no\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    A358 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
