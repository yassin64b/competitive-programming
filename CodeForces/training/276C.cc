/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class C276 {
public:
    void solve(istream& in, ostream& out) {
        int n, q;
        in >> n >> q;
        vector<int> a(n);
        for (int i = 0; i < n; ++i) {
            in >> a[i];
        }
        vector<int> d(n+1, 0);
        for (int i = 0; i < q; ++i) {
            int l, r;
            in >> l >> r;
            ++d[l-1];
            --d[r];
        }
        
        vector<pair<int,int>> b(n);
        for (int i = 0; i < n; ++i) {
            b[i].second = i;
            b[i].first = (i > 0 ? b[i-1].first : 0) + d[i];
        }
        
        sort(b.begin(), b.end());
        sort(a.begin(), a.end());
        
        long long res = 0;
        for (int i = 0; i < n; ++i) {
            res += b[i].first * (long long)a[i];
        }
        
        out << res << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    C276 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
