/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

constexpr int MAXV = 5000;

class B253 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<int> c(n), cnt(MAXV+1, 0);
        for (int i = 0; i < n; ++i) {
            in >> c[i];
            ++cnt[c[i]];
        }
        
        vector<int> sum(MAXV+1, 0);
        for (int i = 1; i <= MAXV; ++i) {
            sum[i] = sum[i-1] + cnt[i];
        }
        
        int res = 1000*1000*1000, cur = 0;
        for (int i = MAXV; i >= 1; --i) {
            int j = i / 2 + i % 2;
            res = min(res, cur + sum[j-1]);
            cur += cnt[i];
        }
        out << res << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    B253 solver;
    std::ifstream in("input.txt");
    std::ofstream out("output.txt");
    solver.solve(in, out);
    return 0;
}
