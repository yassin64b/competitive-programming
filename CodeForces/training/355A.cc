/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class A355 {
private:
    int dr(string s) {
        int n = 0;
        for (char c : s) n += c - '0';
        int m = 0;
        while (n) {
            m += n % 10;
            n /= 10;
        }
        swap(n, m);
        while (n) {
            m += n % 10;
            n /= 10;
        }
        swap(n, m);
        while (n) {
            m += n % 10;
            n /= 10;
        }
        return m;
    }
public:
    void solve(istream& in, ostream& out) {
        int k, d;
        in >> k >> d;
        /*string res(k, '0');
        for (int i = 0; i < k; ++i) {
            for (char c = '9'; c >= '0'; --c) {
                res[i] = c;
                if (dr(res) <= d)
                    break;
            }
        }
        if (dr(res) != d || (res[0] == '0' && k > 1)) {
            out << "No solution\n";
        } else {
            out << res << "\n";
        }*/
        if (d == 0 && k > 1) {
            out << "No solution\n";
        } else {
            string res(k, '0');
            res[0] = d + '0';
            out << res << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    A355 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
