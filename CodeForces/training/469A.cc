/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class A469 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<int> pass(n + 1, 0);
        for (int i = 0; i <= 1; ++i) {
            int x;
            in >> x;
            for (int j = 0; j < x; ++j) {
                int y;
                in >> y;
                pass[y] = 1;
            }
        }
        if (accumulate(pass.begin(), pass.end(), 0) == n) {
            out << "I become the guy.\n";
        } else {
            out << "Oh, my keyboard!\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    A469 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
