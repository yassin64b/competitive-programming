/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

constexpr int MAXV = 1000*100;

class B368 {
public:
    void solve(istream& in, ostream& out) {
        int n, m;
        in >> n >> m;
        vector<int> a(n);
        for (int i = 0; i < n; ++i) {
            in >> a[i];
        }
        vector<int> vis(MAXV+1, 0), cnt(n, 0);
        cnt[n-1] = 1;
        vis[a[n-1]] = 1;
        for (int i = n-2; i >= 0; --i) {
            cnt[i] = cnt[i+1];
            if (!vis[a[i]]) {
                ++cnt[i];
                vis[a[i]] = 1;
            }
        }
        
        for (int i = 0; i < m; ++i) {
            int l;
            in >> l;
            out << cnt[l-1] << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    B368 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
