/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class A494 {
public:
    void solve(istream& in, ostream& out) {
        string s;
        in >> s;
        int n = s.size();
        vector<int> res;
        for (int i = 0; i < n; ++i) {
            if (s[i] == '#') {
                res.push_back(1);
            }
        }
        int cnt = 0;
        for (int i = 0; i < n; ++i) {
            cnt += s[i] == '(';
            cnt -= s[i] == ')';
            cnt -= s[i] == '#';
            if (cnt < 0) {
                out << -1 << "\n";
                return;
            }
        }
        res.back() += cnt;
        int bal = 0;
        for (int i = n-1; i >= 0; --i) {
            if (s[i] == '#') {
                break;
            }
            bal += s[i] == '(';
            bal -= s[i] == ')';
            if (bal > 0) {
                out << -1 << "\n";
                return;
            }
        }
        
        for (int x : res) {
            out << x << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    A494 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
