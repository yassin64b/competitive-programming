/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class D276 {
public:
    void solve(istream& in, ostream& out) {
        long long l, r;
        in >> l >> r;
        
        int bit = 62;
        while (bit >= 0 && (l & (1LL << bit)) == (r & (1LL << bit))) {
            --bit;
        }
        out << (1LL << (bit+1)) - 1 << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    D276 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
