/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin64b
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        int n, m;
        in >> n >> m;
        
        vector<int> f(m);
        for (int i = 0; i < m; ++i) {
            in >> f[i];
        }
        sort(f.begin(), f.end());
        
        int mn = 1e5;
        for (int i = 0; i <= m - n; ++i) {
            if (f[i + n - 1] - f[i] < mn) {
                mn = f[i + n - 1] - f[i];
            }
        }
        
        out << mn << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
