/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class C795 {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        int cur = 0;
        string res;
        while (cur+2 <= n) {
            res += '1';
            cur += 2;
        }
        
        int i = 0;
        while (i < (int)res.size() && cur < n) {
            if (cur + 1 <= n) {
                cur += 1;
                res[i] = '7';
            } else {
                break;
            }
            ++i;
        }
        out << res << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    C795 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
