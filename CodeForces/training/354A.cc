/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class A354 {
public:
    void solve(istream& in, ostream& out) {
        long long n, l, r, Ql, Qr;
        in >> n >> l >> r >> Ql >> Qr;
        long long sum = 0;
        vector<int> w(n);
        for (int i = 0; i < n; ++i) {
            in >> w[i];
            sum += w[i];
        }
        
        long long cur_sum = 0, ans = 1000LL*1000*1000*1000;
        for (int i = 0; i <= n; ++i) {
            int left = i, right = n-i;
            long long tmp = cur_sum * l + (sum-cur_sum) * r + max(0, left-right-1) * Ql + max(0, right-left-1) * Qr;
            ans = min(ans, tmp);
            if (i < n) {
                cur_sum += w[i];
            }
        }
        out << ans << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    A354 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
