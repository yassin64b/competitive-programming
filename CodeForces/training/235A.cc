/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class A235 {
private:
    long long gcd(long long a, long long b) {
        return b == 0 ? a : gcd(b, a % b);
    }
    
    long long lcm(long long a, long long b) {
        return a / gcd(a, b) * b;
    }
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        
        long long val = 0;
        for (int i = n; i >= max(n-50, 1); --i) {
            for (int j = n; j >= max(n-50, 1); --j) {
                for (int k = n; k >= max(n-50, 1); --k) {
                    val = max(val, lcm(lcm(i, j), k));
                }
            }
        }
        out << val << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    A235 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
