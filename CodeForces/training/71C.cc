/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class C71 {
public:
    void solve(istream &in, ostream &out) {
        int n;
        in >> n;
        vector<int> k(n);
        for (int i = 0; i < n; ++i) {
            in >> k[i];
        }
        
        for (int len = 1; 3*len <= n; ++len) {
            if (n % len == 0) {
                for (int i = 0; i < len; ++i) { //starting point
                    bool fits = true;
                    for (int j = i; fits && j < n; j += len) {
                        fits = k[j];
                    }
                    if (fits) {
                        out << "YES\n";
                        return;
                    }
                }
            }
        }
        
        out << "NO\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    C71 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
