/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        string s1, s2;
        in >> s1 >> s2;
        
        int n = s1.size(), m = s2.size();
        int j = 0, cnt = 0;
        for (int i = 0; i < n; ++i) {
            if (s1[i] == s2[j]) {
                ++j;
            } else {
                i -= j;
                j = 0;
            }
            
            if (j == m) {
                ++cnt;
                j = 0;
            }
        }
        
        out << cnt << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
