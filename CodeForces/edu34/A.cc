/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<int> res(101, 0);
        res[0] = 1;
        for (int i = 0; i <= 100; ++i) {
            if (res[i]) {
                if (i + 3 <= 100)
                    res[i + 3] = 1;
                if (i + 7 <= 100)
                    res[i + 7] = 1;
            }
        }
        for (int i = 0; i < n; ++i) {
            int x;
            in >> x;
            out << (res[x] ? "YES\n" : "NO\n");
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
