/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        int res = 0, cur = 0;
        vector<int> v(n+1, 0);
        for (int i = 0; i < 2*n; ++i) {
            int x;
            in >> x;
            if (v[x] == 0) {
                ++cur;
                v[x] = 1;
            } else if (v[x] == 1) {
                --cur;
                v[x] = 2;
            } else {
                assert(true);
            }
            res = max(cur, res);
        }
        out << res << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    TaskA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
