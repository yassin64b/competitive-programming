/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class D782 {
public:
    void solve(istream &in, ostream &out) {
        int n;
        in >> n;
        vector<pair<string, string>> v(n);
        map<string, int> m, first_cnt;
        for (int i = 0; i < n; ++i) {
            string s1, s2;
            in >> s1 >> s2;
            v[i].first = s1.substr(0, 3);
            v[i].second = s1.substr(0, 2) + s2[0];
            ++first_cnt[v[i].first];
        }
        
        vector<int> choice(n, 0);
        for (int i = 0; i < n; ++i) {
            if (first_cnt[v[i].first] > 1) {
                choice[i] = 2;
                if (m[v[i].second] >= 1) {
                    out << "NO\n";
                    return;
                }
                m[v[i].first] = -1;
                m[v[i].second] = 2;
            }
        }
        for (int j = 0; j < n; ++j) {
            for (int i = 0; i < n; ++i) {
                if (!choice[i]) {
                    if (m[v[i].first] != 0) {
                        if (m[v[i].second] >= 1) {
                            out << "NO\n";
                            return;
                        }
                        m[v[i].second] = 2;
                        if (m[v[i].first] == 1) {
                            out << "NO\n";
                            return;
                        }
                        m[v[i].first] = -1;
                        choice[i] = 2;
                    }
                }
            }
        }
        for (int i = 0; i < n; ++i) {
            if (!choice[i]) {
                choice[i] = 1;
                if (m[v[i].first] != 0) {
                    out << "NO\n";
                    return;
                }
                m[v[i].first] = 1;
            }
        }
        
        
        out << "YES\n";
        for (int i = 0; i < n; ++i) {
            if (choice[i] == 1) {
                out << v[i].first << "\n";
            } else if (choice[i] == 2) {
                out << v[i].second << "\n";
            } else {
                out << "\n";
            }
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    D782 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
