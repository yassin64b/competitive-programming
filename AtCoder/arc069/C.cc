/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

class atC {
public:
    void solve(istream& in, ostream& out) {
        long long N, M;
        in >> N >> M;
        
        long long low = 0, hi = N+M, ans = 0;
        while (low <= hi) {
            long long mid = (low + hi) / 2;
            //cout << "check: " << mid << endl;
    
            long long curN = N, curM = M;
            long long needS = mid, needcc = mid;
            
            needS -= curN;
            curM -= needcc*2;
            if (needS > 0) {
                curM -= needS*2;
            }
            if (curM < 0) {
                hi = mid-1;
            } else {
                ans = mid;
                low = mid+1;
            }
        }
        
        out << ans << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    atC solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
