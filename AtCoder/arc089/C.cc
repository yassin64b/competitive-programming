/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class arc089_c {
public:
    void solve(istream& in, ostream& out) {
        int N;
        in >> N;
        long long x = 0, y = 0, t = 0;
        for (int i = 0; i < N; ++i) {
            long long nt, nx, ny;
            in >> nt >> nx >> ny;
            long long dist = abs(x - nx) + abs(y - ny);
            if (dist > nt - t || ((nt - t) - dist) % 2 != 0) {
                out << "No\n";
                return;
            }
        }
        out << "Yes\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    arc089_c solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
