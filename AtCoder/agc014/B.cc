/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class agcB {
public:
    void solve(istream& in, ostream& out) {
        int N, M;
        in >> N >> M;
        vector<int> a(M), b(M);
        vector<vector<int>> g(N);
        for (int i = 0; i < M; ++i) {
            in >> a[i] >> b[i];
            --a[i]; --b[i];
            g[a[i]].push_back(b[i]);
            g[b[i]].push_back(a[i]);
        }
        
        for (int i = 0; i < N; ++i) {
            if (g[i].size() % 2 != 0) {
                out << "NO\n";
                return;
            }
        }
        out << "YES\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);

    agcB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
