/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <cassert>

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<pair<int,int>> vii;

class atcA {
public:
    void solve(istream& in, ostream& out) {
        int N;
        in >> N;
        
        vector<int64_t> A(N), B(N);
        for (int i = 0; i < N; ++i) {
            in >> A[i] >> B[i];
        }
        
        int64_t val = 0;
        for (int i = N-1; i >= 0; --i) {
            A[i] += val;
            val += B[i] - (A[i] % B[i] == 0 ? B[i] : (A[i] % B[i]));
        }
        
        out << val << endl;
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    atcA solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
