/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class agc020_b {
public:
    void solve(istream& in, ostream& out) {
        int K;
        in >> K;
        vector<int> A(K);
        for (int i = 0; i < K; ++i) {
            in >> A[i];
        }
        long long res = 2, res1 = 2;
        for (int i = K - 1; i >= 0; --i) {
            long long x = (res + A[i] - 1) / A[i] * A[i];
            long long y = res1 / A[i] * A[i];
            res = x;
            res1 = y + A[i] - 1;
        }
        if (res > res1) {
            out << -1 << "\n";
        } else {
            out << res << " " << res1 << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    agc020_b solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
