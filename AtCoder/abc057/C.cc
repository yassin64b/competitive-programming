/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class abcC {
private:
    int F(int A, int B) {
        int cnt1 = 0, cnt2 = 0;
        while (A) {
            ++cnt1;
            A /= 10;
        }
        while (B) {
            ++cnt2;
            B /= 10;
        }
        return max(cnt1, cnt2);
    }
public:
    void solve(istream& in, ostream& out) {
        long long N;
        in >> N;
        
        long long sqrtn = 1;
        while ((sqrtn+1)*(sqrtn+1) <= N) {
            ++sqrtn;
        }
        
        int mn = 10000;
        for (int A = 1; A <= sqrtn; ++A) {
            if (N % A == 0) {
                long long B = N / A;
                mn = min(mn, F(A, B));
            }
        }
        out << mn << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    abcC solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
