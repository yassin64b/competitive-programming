/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>

using namespace std;

class abcB {
public:
    void solve(istream& in, ostream& out) {
        int N, M;
        in >> N >> M;
        vector<pair<int,int>> ab(N), cd(M);
        for (int i = 0; i < N; ++i) {
            in >> ab[i].first >> ab[i].second;
        }
        for (int i = 0; i < M; ++i) {
            in >> cd[i].first >> cd[i].second;
        }
        for (int i = 0; i < N; ++i) {
            int mn = 1000*1000*1000, ind = -1;
            for (int j = 0; j < M; ++j) {
                int tmp = abs(ab[i].first - cd[j].first) + abs(ab[i].second - cd[j].second);
                if (tmp < mn) {
                    mn = tmp;
                    ind = j;
                }
            }
            out << ind+1 << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false);

    abcB solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
