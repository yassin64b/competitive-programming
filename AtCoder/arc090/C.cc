/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class arc090_c {
public:
    void solve(istream& in, ostream& out) {
        int N;
        in >> N;
        vector<vector<int>> A(2, vector<int>(N));
        for (int i = 0; i < 2; ++i) {
            for (int j = 0; j < N; ++j) {
                in >> A[i][j];
            }
        }
        A[1][0] += A[0][0];
        for (int j = 1; j < N; ++j) {
            A[0][j] += A[0][j - 1];
            A[1][j] += max(A[1][j - 1], A[0][j]);
        }
        out << A[1][N - 1] << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    arc090_c solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
