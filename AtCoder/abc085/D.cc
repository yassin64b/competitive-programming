/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class abc085_d {
public:
    void solve(istream& in, ostream& out) {
        int N, H;
        in >> N >> H;
        vector<int> b(N);
        int a = 0;
        for (int i = 0; i < N; ++i) {
            int tmp;
            in >> tmp >> b[i];
            a = max(a, tmp);
        }
        sort(b.begin(), b.end());
        reverse(b.begin(), b.end());
        int res = 0;
        for (int x : b) {
            if (H > 0 && x > a) {
                H -= x;
                ++res;
            }
        }
        if (H > 0)
            res += (H + a - 1) / a;
        out << res << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    abc085_d solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
