/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class apc001_b {
public:
    void solve(istream& in, ostream& out) {
        int N;
        in >> N;
        vector<int> a(N), b(N);
        for (int i = 0; i < N; ++i) {
            in >> a[i];
        }
        for (int i = 0; i < N; ++i) {
            in >> b[i];
        }
        long long num_add_b = 0, need_add_b = 0;
        for (int i = 0; i < N; ++i) {
            if (a[i] < b[i]) {
                num_add_b += (b[i] - a[i]) / 2;
            } else {
                need_add_b += a[i] - b[i];
            }
        }
        out << (need_add_b <= num_add_b ? "Yes\n" : "No\n");
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    apc001_b solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
