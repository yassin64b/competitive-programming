/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class mex_value {
public:
    void solve(istream& in, ostream& out) {
        int n, k;
        in >> n >> k;
        vector<int> v(n);
        for (int i = 0; i < n; ++i) {
            in >> v[i];
        }
        set<int> s;
        for (int i = 0; i < 100000; ++i) {
            s.insert(i);
        }
        map<int, int> cnt;
        for (int i = 0; i < k; ++i) {
            s.erase(v[i]);
            ++cnt[v[i]];
        }
        out << *s.begin() << " ";
        for (int i = k; i < n; ++i) {
            if (--cnt[v[i - k]] == 0) {
                s.insert(v[i - k]);
            }
            s.erase(v[i]);
            ++cnt[v[i]];
            out << *s.begin() << " ";
        }
        out << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    mex_value solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
