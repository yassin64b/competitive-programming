/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class program_2 {
public:
    void solve(istream& in, ostream& out) {
        long long n;
        in >> n;
        vector<string> cmd;
        while (n > 1) {
            if (n % 2 == 0 && (n / 2 < n - 3 || n - 3 < 1)) {
                n /= 2;
                cmd.push_back("MUL\n");
            } else {
                n -= 3;
                cmd.push_back("ADD\n");
            }
        }
        if (n == 1) {
            out << (int)cmd.size() + 1 << "\n";
            reverse(cmd.begin(), cmd.end());
            for (const string &s : cmd) {
                out << s;
            }
            out << "END\n";
        } else {
            out << 0 << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    program_2 solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
