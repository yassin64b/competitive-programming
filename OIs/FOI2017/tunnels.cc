/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class tunnels {
public:
    void solve(istream& in, ostream& out) {
        int n, m;
        in >> n >> m;
        vector<int> deg(n, 0);
        for (int i = 0; i < m; ++i) {
            int a, b;
            in >> a >> b;
            ++deg[b - 1];
            --deg[a - 1];
        }
        int res1 = 0, res2 = 0;
        for (int u = 0; u < n; ++u) {
            res1 += max(0, deg[u]);
            res2 += max(0, -deg[u]);
        }
        assert(res1 == res2);
        out << res1 << "\n";
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    tunnels solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
