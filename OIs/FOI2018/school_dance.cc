/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class school_dance {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<pair<int, int>> v(n / 2 + 1);
        vector<int> cnt(n, 0);
        for (int i = 0; i < n / 2 + 1; ++i) {
            int a, b;
            in >> a >> b;
            v.emplace_back(a - 1, b - 1);
            ++cnt[a - 1];
            ++cnt[b - 1];
        }
        for (const auto &p : v) {
            if (cnt[p.first] >= 2 && cnt[p.second] >= 2) {
                out << p.first + 1 << " " << p.second + 1 << "\n";
                return;
            }
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    school_dance solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
