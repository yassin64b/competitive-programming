/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class foi_string {
public:
    void solve(istream& in, ostream& out) {
        string s;
        in >> s;
        int n = 26;
        string goal(s);
        sort(goal.begin(), goal.end());
        vector<string> res;
        while (s != goal) {
            if (s[1] < s[0] && s[1] != 'A') {
                swap(s[1], s[0]);
                res.push_back("SWAP");
            } else {
                s = s.back() + s.substr(0, n - 1);
                res.push_back("MOVE");
            }
        }
        out << res.size() << "\n";
        for (const string &cmd : res) {
            out << cmd << "\n";
        }
    }
};


int main() {
    std::ios::sync_with_stdio(false); cin.tie(nullptr);
    foi_string solver;
    std::istream& in(std::cin);
    std::ostream& out(std::cout);
    solver.solve(in, out);
    return 0;
}
